@model cdscntmkpapinetcore2webapp.Models.OfferManager.GetOfferPackageSubmissionResultMessage

@{
    ViewData["Title"] = "GetOfferPackageSubmissionResult";
}

<br/>
<br />    
 <script src="https://cdn.zingchart.com/zingchart.min.js"></script>
  <div class='column'>
 <div id="chart21" class="panel panel-info"></div>
</div>
<div>
    <h4>GetOfferPackageSubmissionResult</h4>    
    @if (Model._OperationSuccess)
    {

        <div class="alert alert-success">
            <strong>Success!</strong>
        </div>
        <div>
            <hr />
            <div id="MessageXML2" class="panel panel-default">
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#RequestXML">Click  to display the XML Request</a>
                    </h4>
                </div>
                <div id="RequestXML" class="panel-collapse collapse">
                    <div class="panel-body"><pre lang="xml"> @Html.DisplayFor(model => model._RequestXML)</pre></div>
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#MessageXML">Click  to display the XML Message</a>
                    </h4>
                </div>
                <div id="MessageXML" class="panel-collapse collapse">
                    <div class="panel-body"><pre lang="xml"> @Html.DisplayFor(model => model._MessageXML)</pre></div>
                </div>
            </div>
        </div>
    }
    else if (Model._ErrorMessage != "")
    {
        <div class="alert alert-danger">
            <strong>Failed!</strong> : error message : @Model._ErrorMessage
        </div>
        <div>
            <hr />
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#RequestXML">Click  to display the XML Request</a>
                    </h4>
                </div>
                <div id="RequestXML" class="panel-collapse collapse">
                    <div class="panel-body"><pre lang="xml"> @Html.DisplayFor(model => model._RequestXML)</pre></div>
                </div>
            </div>
            <div class="panel panel-default">
                @Html.DisplayFor(model => model._RequestXML)
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#MessageXML">Click  to display the XML Message</a>
                    </h4>
                </div>
                <div id="MessageXML" class="panel-collapse collapse">
                    <div class="panel-body"><pre lang="xml"> @Html.DisplayFor(model => model._MessageXML)</pre></div>
                </div>
            </div>
        </div>

    }
    else
    {
        <div class="alert alert-warning">
            <strong>Warning!</strong> error message : @Model._ErrorMessage.
        </div>
    }

    <script>
 zingchart.render({
            id: 'chart21',
            height: '100%',
            width: '100%',
            data: {
                type: "pie",
                "labels":[
                        { //Label One
                            "text":"50%",
                            "font-family":"Calibri",
                            "font-size":"50",
                            "text-align":"center",
                            "x":"80%",
                            "y":"0%"
                        },
                        { //Label Two
                            "text":"des offres actives<br>du Top 100 vendeurs <br> sont en ligne <br> sur la dernière heure",
                            "font-family":"Calibri",
                            "font-size":"18",
                            "text-align":"left",
                            "x":"80%",
                            "y":"10%"
                        }],
                backgroundColor: "#5BC254",
                title: {
                    text: "Top 100 vendeur",
                    textAlign: "left",
                    marginLeft: "10px",
                    adjustLayout: true,
                    fontColor: "white"
                },
                subtitle: {
                    text: "Pourcentage <br>d'offres publiées <br> sur le top 100 vendeur",
                    textAlign: "left",
                    marginLeft: "10px",
                    fontColor: "white"
                },
                borderRadius: 4,
                valueBox: {
                    visible: true
                },
                plot: {
                    slice: 90,
                    refAngle: 270,
                    detach: false,
                    hoverState: {
                        visible: false
                    },
                    valueBox: {
                        visible: true,
                        type: "first",
                        connected: false,
                        placement: "center",
                        text: "%v%",
                        fontColor: "white",
                        fontSize: "20px"
                    },
                    tooltip: {
                        fontColor: "#333",
                        rules: [{
                            rule: "%i == 0",
                            text: "%v Created",
                            shadow: false,
                            borderRadius: 4
                        }, {
                            rule: "%i == 1",
                            text: "%v Left",
                            shadow: false,
                            borderRadius: 4
                        }]
                    }
                },
                plotarea: {
                    margin: "dynamic",
                },
                series: [{
                    values: "50%",
                    backgroundColor: "#ffffff",
                    borderWidth: "0px",
                    shadow: 0
                }, {
                    values: "50%",
                    backgroundColor: "#dadada",
                    alpha: "0.5",
                    borderWidth: "1px",
                    shadow: 0,
                    valueBox: {
                        visible: false
                    }
                }]

            }
        });
    var editor = CodeMirror(document.getElementById("MessageXML2"), {
        mode: "xml",
        height : "auto"
    });
    </script>
</div>