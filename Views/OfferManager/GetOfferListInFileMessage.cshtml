@model cdscntmkpapinetcore2webapp.Models.OfferManager.GetOfferListInFileMessage

@{
    ViewData["Title"] = "GetOfferListInFile";
}
<script src="~/js/signalr/dist/browser/signalr.min.js">
</script>
<br />
<br />
<br />
<div>
    <h4>GetOfferListInFileMessage</h4>
<div class="alert alert-warning">
        <strong>This feature is under construction</strong>
        <br/>At the moment this extract is limited to the 40 000 offers 
        <br/>or 40 pages from the page number you set in you filter
        <br/>the file is immediately available  but the file continue to be updated<br/>
        a progressbar will be very soon available to let you know when the file is fully generated
    </div>

@if (Model._OperationSuccess)
{

    <div class="alert alert-success">
        <strong>
            Success! 
        </strong>
        <strong>
            <h4><a href="~/OfferManager/Download/?OfferExtractFile=@Model._Filepath">Export your Offer list</a></h4>
        </strong>         
    </div>   
   
}
else
{
    <div class="alert alert-warning">
        <strong>Warning!</strong> ErrorMessage : @Model._ErrorMessage
    </div>
}
 
    <div class="form-group">
        <label for="progressBarData">Modification des références en base</label>
        <div class="progress">
            <div id="progressBarData" class="progress-bar" role="progressbar"
                 aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" style="width:0%">
            </div>
        </div>
    </div>
    </div>

<script>
    var progressConnection =
    new signalR.HubConnectionBuilder()
    .withUrl("/myProgressHub")
    .configureLogging(signalR.LogLevel.Information)
    .build();
    progressConnection.start();

   progressConnection.on("initProgressBar", () => {
    setProgress(0);
    $("#progressBarData").show();
    });
    progressConnection.on("updateProgressBar", (perc) => {
    setProgress(perc);
    });
    progressConnection.on("clearProgressBar", () => {
    setProgress(100);
    $("#progressBarData").hide();
    });
</script>