<fieldset>
    @using cdscntmkpapinetcore2webapp.Models
    @using www.cdiscount.com
    @model cdscntmkpapinetcore2webapp.Models.FBCManager.CreateExternalOrderRequest

    @{
        ViewData["Title"] = "CreateExternalOrder";
    }


    @using (Html.BeginForm("CreateExternalOrderMessage", "FBCManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <br />
        <br />
        <h2>CreateExternalOrder</h2>
        <div class="col-xs-3">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Identification</h3>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <br />
                        <div role="tabpanel" class="tab-pane active" id="loginTab">
                            <div class="form-group">
                                <label for="usrname"><span class="glyphicon glyphicon-user"></span> Username</label>
                                @Html.TextBoxFor(model => model._Login, new { @id = "login", @class = "form-control", @placeholder = "Login" })
                            </div>
                            <div class="form-group">
                                <label for="psw"><span class="glyphicon glyphicon-eye-open"></span> Password</label>
                                @Html.TextBoxFor(model => model._Password, new { @id = "password", @class = "form-control", @placeholder = "Password", @type = "password" })
                            </div>
                            <div class="form-group">
                                <label for="token"><span class="glyphicon glyphicon-qrcode"></span> Token</label>
                                @Html.TextBoxFor(model => model._Token, new { @id = "token", @class = "form-control", @placeholder = "Token" })
                            </div>
                            <div class="form-group">
                                <label for="Environment"><span class="glyphicon glyphicon-qrcode"></span> Environment</label>
                                <br />
                                <p class="nav navbar-nav navbar-left">
                                    @Html.DropDownListFor(m => m._EnvironmentSelected, new SelectList(Enum.GetValues(typeof(EnvironmentEnum))),"Select Environment")
                                </p>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xs-8">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title">Order</h3>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <br />
                        <div class="form-group">
                            <label for="CustomerOrderNumber"><span class="glyphicon glyphicon-qrcode"></span>CustomerOrderNumber</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.CustomerOrderNumber, new { @id = "CustomerOrderNumber", @class = "form-control", @placeholder = "CustomerOrderNumber" })
                        </div>
                        <div class="form-group">
                            <label for="OrderDate"><span class="glyphicon glyphicon-calendar"></span>OrderDate</label>
                            <br />
                            @Html.EditorFor(model => model._MyOrderIntegrationRequest.Order.OrderDate, new { @id = "OrderDate", @class = "form-control form_datetime", placeholder = "yyyy-mm-ddThh:mm:ss" })
                        </div>
                        <div class="form-group">
                            <label for="ShippingMode"><span class="glyphicon glyphicon-plane"></span>ShippingMode</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.ShippingMode, new { @id = "ShippingMode", @class = "form-control", @placeholder = "ShippingMode" })
                        </div>
                        <div class="form-group">
                            <label for="Corporation"><span class="glyphicon glyphicon-plane"></span>Corporation</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Corporation, new { @id = "Corporation", @class = "form-control", @placeholder = "Corporation" })
                        </div>
                         <div class="form-group">
                            <label for="Comments"><span class="glyphicon glyphicon-plane"></span>Comments</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Comments, new { @id = "Comments", @class = "form-control", @placeholder = "Comments" })
                        </div>                      
                    </div>
                </div>
            </div>
        </div> 
        <div class="col-xs-12">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title"><span class="glyphicon glyphicon-user"></span>Customer</h3>
                </div>
                <div class="panel-body">
                    <div class="tab-content">
                        <div class="form-group">
                           <label for="Civility"><span class="glyphicon glyphicon-user"></span>Civility</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.Civility, new { @id = "Civility", @class = "form-control", @placeholder = "Civility" })
                           <label for="CustomerFirstName"><span class="glyphicon glyphicon-user"></span>CustomerFirstName</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.CustomerFirstName, new { @id = "CustomerFirstName", @class = "form-control", @placeholder = "CustomerFirstName" })
                            <label for="CustomerLastName"><span class="glyphicon glyphicon-user"></span>CustomerLastName</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.CustomerLastName, new { @id = "CustomerLastName", @class = "form-control", @placeholder = "CustomerLastName" })
                            <label for="CustomerEmailAddress"><span class="glyphicon glyphicon-envelope"></span>CustomerEmailAddress</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.CustomerEmailAddress, new { @id = "CustomerEmailAddress", @class = "form-control", @placeholder = "CustomerEmailAddress" })
                            <label for="CellPhoneNumber"><span class="glyphicon glyphicon-phone"></span>CellPhoneNumber</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.CellPhoneNumber, new { @id = "CellPhoneNumber", @class = "form-control", @placeholder = "CellPhoneNumber" })
                            <label for="LandlinePhoneNumber"><span class="glyphicon glyphicon-earphone"></span>LandlinePhoneNumber</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.LandlinePhoneNumber, new { @id = "LandlinePhoneNumber", @class = "form-control", @placeholder = "LandlinePhoneNumber" })
                            <label for="Locality"><span class="glyphicon glyphicon-home"></span>Locality</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.Locality, new { @id = "Locality", @class = "form-control", @placeholder = "Locality" })
                            <label for="ShippingAddress"><span class="glyphicon glyphicon-home"></span>ShippingAddress</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.ShippingAddress, new { @id = "ShippingAddress", @class = "form-control", @placeholder = "ShippingAddress" })
                            <label for="ShippingAddressTitle"><span class="glyphicon glyphicon-home"></span>ShippingAddressTitle</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.ShippingAddressTitle, new { @id = "ShippingAddressTitle", @class = "form-control", @placeholder = "ShippingAddressTitle" })
                            <label for="CustomerOrderNumber"><span class="glyphicon glyphicon-home"></span>AdditionalShippingAddress</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.AdditionalShippingAddress, new { @id = "AdditionalShippingAddress", @class = "form-control", @placeholder = "AdditionalShippingAddress" })
                            <label for="ShippingPostalCode"><span class="glyphicon glyphicon-globe"></span>ShippingPostalCode</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.ShippingPostalCode, new { @id = "ShippingPostalCode", @class = "form-control", @placeholder = "ShippingPostalCode" })
                            <label for="ShippingCity"><span class="glyphicon glyphicon-globe"></span>ShippingCity</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.ShippingCity, new { @id = "ShippingCity", @class = "form-control", @placeholder = "ShippingCity" })
                            <label for="ShippingCountry"><span class="glyphicon glyphicon-globe"></span>ShippingCountry</label>
                            @Html.TextBoxFor(model => model._MyOrderIntegrationRequest.Order.Customer.ShippingCountry, new { @id = "ShippingCountry", @class = "form-control", @placeholder = "ShippingCountry" })
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>   
        <div class="col-xs-12">
            <div class="panel panel-info">
                <div class="panel-heading">
                    <h3 class="panel-title"><span class="glyphicon glyphicon-list-alt"></span> OrderLineList</h3>
                </div>
                <div class="panel panel-default">
                    <div class="container">    
                        <div id="table" class="table-editable">
                            
                            <table class="table-condensed">
                            <tr>
                                <th>ProductEan</th>
                                <th>ProductReference</th>
                                <th>Quantity</th>        
                                <th></th>
                                <th><span class="table-add glyphicon glyphicon-plus"></span></th>
                            </tr>
                            <tr>
                                <td contenteditable="true">
                                    <input type="text" class="form-control" id="ProductEan" name="ProductEan[]" value="ProductEan" placeholder="ProductEan">
                                </td>        
                                <td contenteditable="true">
                                    <input type="text" class="form-control" id="ProductReference" name="ProductReference[]" value="ProductReference" placeholder="ProductReference">
                                </td>
                                <td contenteditable="true">
                                    <input type="number" class="form-control" id="Quantity" name="Quantity[]" value="Quantity" placeholder="Quantity">
                                </td>
                                <td>
                                <span class="table-remove glyphicon glyphicon-remove"></span>
                                </td>
                                <td>
                                <span class="table-up glyphicon glyphicon-arrow-up"></span>
                                <span class="table-down glyphicon glyphicon-arrow-down"></span>
                                </td>
                            </tr>
                            <!-- This is our clonable table line -->
                            <tr class="hide">
                                <td contenteditable="true">
                                    <input type="text" class="form-control" id="ProductEan" name="ProductEan[]" value="ProductEan" placeholder="ProductEan">
                                </td>        
                                <td contenteditable="true">
                                    <input type="text" class="form-control" id="ProductReference" name="ProductReference[]" value="ProductReference" placeholder="ProductReference">
                                </td>
                                <td contenteditable="true">
                                    <input type="number" class="form-control" id="Quantity" name="Quantity[]" value="Quantity" placeholder="Quantity">
                                </td>
                                <td>
                                <span class="table-remove glyphicon glyphicon-remove"></span>
                                </td>
                                <td>
                                <span class="table-up glyphicon glyphicon-arrow-up"></span>
                                <span class="table-down glyphicon glyphicon-arrow-down"></span>
                                </td>
                            </tr>
                            </table>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="form-group">
            <input type="submit" value="Send" class="btn btn-info" />
            <input type="reset" value="Reset" class="btn btn-default" />
        </div>
    }
</fieldset>



@section scripts 
    {
        <script type="text/javascript">
            $(document).ready(function () {
                var next = 1;
                $(".add-more").click(function (e) {
                    e.preventDefault();
                    var addto = "#field" + next;
                    var addRemove = "#field" + (next);
                    next = next + 1;
                    var newIn = '<input autocomplete="off" class="input form-control" id="field' + next + '" name="field' + next + '" type="text">';
                    var newInput = $(newIn);
                    var removeBtn = '<button id="remove' + (next - 1) + '" class="btn btn-danger remove-me" >-</button></div><div id="field">';
                    var removeButton = $(removeBtn);
                    $(addto).after(newInput);
                    $(addRemove).after(removeButton);
                    $("#field" + next).attr('data-source', $(addto).attr('data-source'));
                    $("#count").val(next);

                    $('.remove-me').click(function (e) {
                        e.preventDefault();
                        var fieldNum = this.id.charAt(this.id.length - 1);
                        var fieldID = "#field" + fieldNum;
                        $(this).remove();
                        $(fieldID).remove();
                    });
                });



            });

            var room = 1;
            function orderline_fields() {

                room++;
                var objTo = document.getElementById('orderline_fields')
                var divtest = document.createElement("div");
                divtest.setAttribute("class", "form-group removeorderline" + room);
                var rdiv = 'removeorderline' + room;
                divtest.innerHTML = '<tr><td><div class="col-sm-3 nopadding"><div class="form-group"><input type="text" class="form-control" id="SellerProductId" name="SellerProductId[]" value="" placeholder="SellerProductId"></div></div></td><td><div class="col-sm-3 nopadding"><div class="form-group"><div class="input-group"><select class="form-control" id="ProductCondition" name="ProductCondition[]"><option value="6">New</option><option value="1">LikeNew</option><option value="2">VeryGoodState</option><option value="3">GoodState</option><option value="4">AverageState</option><option value="5">Refurbished</option></select></div></div></div></td><td><div class="col-sm-3 nopadding"><div class="form-group"><div class="input-group"><select class="form-control" id="AcceptationState" name="AcceptationState[]"><option value="1">AcceptedBySeller</option><option value="2">RefusedBySeller</option><option value="3">ShippedBySeller</option><option value="5">ShipmentRefusedBySeller</option></select><div class="input-group-btn"><button class="btn btn-danger" type="button" onclick="remove_orderline_fields(' + room + ');"><span class="glyphicon glyphicon-minus" aria-hidden="true"></span></button></div></div></div></div></td><td><div class="clear"></div></td></tr>';
                objTo.appendChild(divtest)
            }
            function remove_orderline_fields(rid) {
                $('.removeorderline' + rid).remove();
            }
        </script>

        <script type="text/javascript">
        var $TABLE = $('#table');
        var $BTN = $('#export-btn');
        var $EXPORT = $('#export');

        $('.table-add').click(function () {
        var $clone = $TABLE.find('tr.hide').clone(true).removeClass('hide table-line');
        $TABLE.find('table').append($clone);
        });

        $('.table-remove').click(function () {
        $(this).parents('tr').detach();
        });

        $('.table-up').click(function () {
        var $row = $(this).parents('tr');
        if ($row.index() === 1) return; // Don't go above the header
        $row.prev().before($row.get(0));
        });

        $('.table-down').click(function () {
        var $row = $(this).parents('tr');
        $row.next().after($row.get(0));
        });

        // A few jQuery helpers for exporting only
        jQuery.fn.pop = [].pop;
        jQuery.fn.shift = [].shift;

        $BTN.click(function () {
        var $rows = $TABLE.find('tr:not(:hidden)');
        var headers = [];
        var data = [];
        
        // Get the headers (add special header logic here)
        $($rows.shift()).find('th:not(:empty)').each(function () {
            headers.push($(this).text().toLowerCase());
        });
        
        // Turn all existing rows into a loopable array
        $rows.each(function () {
            var $td = $(this).find('td');
            var h = {};
            
            // Use the headers from earlier to name our hash keys
            headers.forEach(function (header, i) {
            h[header] = $td.eq(i).text();   
            });
            
            data.push(h);
        });
        
        // Output the result
        $EXPORT.text(JSON.stringify(data));
        });
</script>

    }