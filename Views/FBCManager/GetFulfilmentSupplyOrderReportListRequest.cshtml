@using cdscntmkpapinetcore2webapp.Models
@using www.cdiscount.com
@model cdscntmkpapinetcore2webapp.Models.FBCManager.GetFulfilmentSupplyOrderReportListRequest


@{
    ViewData["Title"] = "GetFulfilmentSupplyOrderReportList";
}


@using (Html.BeginForm("GetFulfilmentSupplyOrderReportListMessage", "FBCManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <br />
    <br />
    <h2>GetFulfilmentSupplyOrder</h2>
    <div class="col-xs-3">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Identification</h3>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <br />
                    <div role="tabpanel" class="tab-pane active" id="loginTab">
                        <div class="form-group">
                            <label for="usrname"><span class="glyphicon glyphicon-user"></span> Username</label>
                            @Html.TextBoxFor(model => model._Login, new { @id = "login", @class = "form-control", @placeholder = "Login" })
                        </div>
                        <div class="form-group">
                            <label for="psw"><span class="glyphicon glyphicon-eye-open"></span> Password</label>
                            @Html.TextBoxFor(model => model._Password, new { @id = "password", @class = "form-control", @placeholder = "Password", @type = "password" })
                        </div>
                        <div class="form-group">
                            <label for="token"><span class="glyphicon glyphicon-qrcode"></span> Token</label>
                            @Html.TextBoxFor(model => model._Token, new { @id = "token", @class = "form-control", @placeholder = "Token" })
                        </div>
                        <div class="form-group">
                            <label for="token"><span class="glyphicon glyphicon-qrcode"></span> Environment</label>
                            <br />
                            <p class="nav navbar-nav navbar-left">
                                @Html.DropDownListFor(m => m._EnvironmentSelected, new SelectList(Enum.GetValues(typeof(EnvironmentEnum))),
                    "Select Environment")
                            </p>
                            <br />
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="col-xs-5">
        <div class="panel panel-info">
            <div class="panel-heading">
                <h3 class="panel-title">Parameters</h3>
            </div>
            <div class="panel-body">
                <div class="tab-content">
                    <br /><label for="Select Filter Criterion">Select a BeginCreationDate</label><br />
                    @Html.TextBoxFor(m => m._SupplyOrderReportRequest.BeginCreationDate, new { @id = "BeginCreationDate", @class = "form-control form_datetime", placeholder = "BeginCreationDate" })<br />
                    <br /><label for="Select Filter Criterion">Select a EndCreationDate</label><br />
                    @Html.TextBoxFor(m => m._SupplyOrderReportRequest.EndCreationDate, new { @id = "EndCreationDate", @class = "form-control form_datetime", placeholder = "EndCreationDate" })<br />
                    <br /><label for="Select Filter Criterion">Select a PageNumber</label><br />
                    @Html.TextBoxFor(m => m._SupplyOrderReportRequest.PageNumber, new { @id = "PageNumber", @class = "form-control form_datetime", placeholder = "PageNumber" })<br />
                    <br /><label for="Select Filter Criterion">Select a PageSize</label><br />
                    @Html.TextBoxFor(m => m._SupplyOrderReportRequest.PageSize, new { @id = "PageSize", @class = "form-control form_datetime", placeholder = "PageSize" })<br />
                     <br /><label for="Select Filter Criterion">Select a DepositId</label><br />
                    @Html.TextBoxFor(m => m._SupplyOrderReportRequest.DepositIdList, new { @id = "DepositIdList", @class = "form-control form_datetime", placeholder = "DepositIdList;DepositIdList;DepositIdList;..." })<br />
                  
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <input type="submit" value="Send" class="btn btn-info" />
        <input type="reset" value="Reset" class="btn btn-default" />
    </div>
}
@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            var next = 1;
            $('#sandbox-container .endCreationDate').datepicker({
                todayBtn: true,
                calendarWeeks: true,
                todayHighlight: true,
                beforeShowMonth: function (date) {
                    if (date.getMonth() == 8) {
                        return false;
                    }
                }
            });
        })
        $(document).ready(function () {

            $('#orderStatesEnum').multiselect({
                includeSelectAllOption: true,
                nonSelectedText: 'Selectionnez un filtre minimum',
                //enableFiltering: true,
                showCheckboxes: true,
                showSelectedItems: true
            });

            $('#beginCreationDate,#beginModificationDate,#endCreationDate,#endModificationDate').datetimepicker({
                autoclose: true,
                //format: "yyyy/mm/dd",
                format: 'yyyy-mm-dd hh:ii',
                language: "fr",
                todayHighlight: true,
                //orientation: "top right"
                minView: 1,
            });

            $('#beginCreationDate').on("change", function () {
                var dateToCopy = $(this).val();
                if ($('#beginModificationDate').val() == "")
                    $('#beginModificationDate').val(dateToCopy);
            })

            $('#endCreationDate').on("change", function () {
                var dateToCopy = $(this).val();
                if ($('#endModificationDate').val() == "")
                    $('#endModificationDate').val(dateToCopy);
            })

            $(function () {
                $("input:file").change(function () {
                    if ($(this).val() != "")
                        $("input:submit").val("Mass Update with file");
                    else
                        $("input:submit").val("GetOrderList");
                });
            });

            $('#loginTab').click(function (e) {
                e.preventDefault()
                $(this).tab('show')
                $("#token").val("");
            });

            $('#tokenTab').click(function (e) {
                e.preventDefault()
                $(this).tab('show')
                $("#login").val("");
                $("#password").val("");
            });

            $('form').bind("keypress", function (e) {
                if (e.keyCode == 13) {
                    e.preventDefault();
                    return false;
                }
            });

            $("#sellerId").on('input', function (e) {
                e.preventDefault();
                if (e.keyCode == 13) {
                    return false;
                }
                $("#okBtn").hide();
                $("#nokBtn").hide();

                var $this = $(this)
                var delay = 2000;
                clearTimeout($this.data('timer'));
                $this.data('timer', setTimeout(function () {
                    $this.removeData('timer');
                    getToken();
                }, delay));
            });

            $('#go').click(function () {
                $("#okBtn").hide();
                $("#nokBtn").hide();
                getToken();
                return false;
            });

            $("#token_error").hide();
            $("#loadingBtn").hide();
            $("#okBtn").hide();

            function getToken() {
                var sellerId = $("#sellerId").val();
                $("#loadingBtn").show();
                $.ajax({
                    type: "GET",
                    url: '@Url.Action("GetUserToken", "OrderManager")',
                    contentType: "application/json; charset=utf-8",
                    data: {
                        "sellerId": sellerId
                    },
                    dataType: "json",
                    success: function (result) {
                        $("#loadingBtn").hide();
                        if (result.length != 32) {
                            errorToken(result);
                        } else {
                            $("#okBtn").show();
                            $("#nokBtn").hide();
                            $("#login").val("");
                            $("#password").val("");
                            $("#token").val(result);
                            $("#token_error").text("").hide();
                            $("#tokenTab").addClass('active');
                            $("#loginTab").removeClass("active")
                            $("#tokenO").addClass('active');
                            $("#loginO").removeClass("active")
                        }
                    },
                    error: function (result) {
                        errorToken(result);
                    }
                });

                function errorToken(result) {
                    $("#okBtn").hide();
                    $("#nokBtn").show();
                    $("#token_error").text(result).show();
                    $("#token").val("");
                }
            };
        });
    </script>
}
